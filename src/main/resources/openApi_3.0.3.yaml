openapi: 3.0.3
info:
  title: Car resources
  version: "1"
  description: Car resources

servers:
  - url: http://localhost:8080/api
    description: local server
tags:
  - name: car
    description: everything about Car

paths:
  /car:
    get:
      tags:
        - car
      summary: Get list of cars
      description: Get list of all saved cars
      operationId: getAllCars
      responses:
        '200':
          description: Success

    post:
      tags:
        - car
      summary: Save car
      description: Save a new car in the catalog
      operationId: addCar
      requestBody:
        description: Create a new car
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarDTO'
        required: true
      responses:
        '204':
          description: Success
  /car/{carId}:
    get:
      tags:
        - car
      summary: Get car by id
      description: Get car by id
      operationId: getCarById
      parameters:
        - name: carId
          in: path
          description: ID of Car that need to be returned
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarDTO'
        '404':
          description: car with id {carId} was not found
    patch:
      tags:
        - car
      summary: Update car by id
      description: Update car by id
      operationId: updateCar
      parameters:
        - name: carId
          in: path
          description: ID of Car that need to be updated
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarDTO'
        '404':
          description: car with id {carId} was not found
    delete:
      tags:
        - car
      summary: Delete car by id
      description: Delete car by id
      operationId: deleteCar
      parameters:
        - name: carId
          in: path
          description: ID of Car that need to be deleted
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarDTO'
        '404':
          description: car with id {carId} was not found
components:
  schemas:
    CarDTO:
      type: object
      description: Data element for car
      properties:
        id:
          type: integer
          format: int64
        cost:
          type: integer
        issueDate:
          type: string
        model:
          type: string
        manufacturer:
          type: string
          enum:
            - AUDI
            - BMW
            - CITROEN
            - FIAT